@model Client.LoanApplication.Models.LoanDetails

@{
    ViewBag.Title = "EditCase";
}

@using ((Ajax.BeginForm("SaveDetails", "Underwriter", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "", OnSuccess = "OnSuccess", OnFailure = "OnFailure" })))
{
    @Html.AntiForgeryToken()

    <div>
        <h4 style="text-align:center;">Review Case</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row UWEditCasemrgbtm">
            <div class="col-md-2">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.FirstName)
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.LastName)
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Gender)
            </div>
        </div>

        <div class="row UWEditCasemrgbtm">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Contact)
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Postcode)
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.ChargeType, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.ChargeType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.ChargeType)
            </div>
        </div>

        <div class="row UWEditCasemrgbtm">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Amount)
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Valuation, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.Valuation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Valuation)
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.LTV, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.LTV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.LTV)
            </div>
        </div>

        <div class="row UWEditCasemrgbtm">
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.UWStatus, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.UWStatus, "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UWStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row UWEditCasemrgbtm">
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.UWReason, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.UWReason, new { @class = "form-control", @rows = 2 })
                    @Html.ValidationMessageFor(model => model.UWReason, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row UWEditCasemrgbtn">
            <div class="col-md-6" style="text-align:right">
                <input type="submit" value="Save" class="btn btn-default UWEditCaseactionbtn" />
            </div>
            <div class="col-md-6" style="text-align:left">
                @Html.ActionLink("Cancel", "Dashboard", "Underwriter", null, htmlAttributes: new { @class = "btn btn-default UWEditCaseactionbtn" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
