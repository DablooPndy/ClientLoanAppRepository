@model Client.LoanApplication.Models.LoanDetails
@using Client.LoanApplication.Models

@{
    ViewBag.Title = "CreateCase";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Case</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, Gender.Male, new { @checked = true })@Html.Label("Male")
                @Html.RadioButtonFor(model => model.Gender, Gender.Female)@Html.Label("Female")
                @Html.RadioButtonFor(model => model.Gender, Gender.Other)@Html.Label("Other")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ChargeType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ChargeType, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valuation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valuation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valuation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LTV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top: 7px;">
                <span class="LTVClass">
                    @Html.DisplayFor(model => model.LTV)
                </span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" style="margin-right: 14px; width: 100px;" />
                @Html.ActionLink("Cancel", "Dashboard", "Broker", null, htmlAttributes: new { @class = "btn btn-default Actionbtn" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

    document.getElementById("Amount").addEventListener("blur", LTVCaculation);
    document.getElementById("Valuation").addEventListener("blur", LTVCaculation);
    function LTVCaculation() {
        var CalculatedLTV = 0;
        $('#lblLTV').html(CalculatedLTV);
        if (!isNaN((parseFloat($('#Amount').val()))) && !isNaN((parseFloat($('#Amount').val())))) {
           
            CalculatedLTV = ((parseFloat($('#Amount').val()) / parseFloat($('#Valuation').val())) * 100);
        }
        else {
            CalculatedLTV = 0;
        }
        $(".LTVClass").html(CalculatedLTV.toFixed(2));
    }
</script>
<style>
    .Actionbtn {
        width: 100px;
    }
</style>